COMPLETED FIRST PASS:
- Add child list to every object which is a dic containg children and sub children on object split by type dictionary 
  {
    'button' : [...],
    'canvas' : [...],
  }
  This is populated from child objects so if a child has children they will be added as well but not parents  

IN PROGRESS 
- Reworking ui so more modular and streamlined 
- Reworking way that children and objects are handled 
 
TODO
- Figure out child objects transform issue 
- Sort out rendering so that current object selected rendered ontop
- Fixing debug colour change for when an object thats not being targated during collision check but is underneath 
  the object being targeted has its colour changed 
- Need to make it so that when an action is taking place if mouse is down only when it is up again is it stopped 
- Added radial menu support 
- Top layer ordering and proper z order 
- Add popups which when clicked off dismiss 
- Add anchors for objects to be anchored to other objects doesn't have to be ui object so can be item in a game just need the anchors position and other information if needed such as its width 
- Need to move all rendering code into ui file 
- When checking for collision return the current collided object
- Add sprite / image support for canvases / backgrounds 
- Some objects hold data or read data from game to be displayed (i.e dynamic text/ updates)  
- Animation add a way for objects to be animated 
- Text wrap 
- Make a .ui file where you can define the screen and widgets and buttons in the file without the need for code
- use regular expressions to read the scripting language and translate it to python
- size to fit option in containers (specify size of container and then objects will fit inside it together, based on 
  first objects positon if non given)
- Work on Multiprocessing   https://docs.python.org/3/library/multiprocessing.html
